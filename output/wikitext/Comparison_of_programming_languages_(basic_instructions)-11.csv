! exit block(break);continue;label;branch (goto);return value from generator;
Ada[1];exit «loop_name» «when condition»;{{n/a}};label:;goto label;{{n/a}};
ALGOL 68;value exit; ...;do statements; skip exit; label: statements od;label: ...;go to label; ... goto label; ... label; ...;yield(value) (Callback)[13];
APL;:Leave;:Continue;label:;?label or :GoTo label;{{n/a}};
C (C99);break;;continue;;label:;goto label;;rowspan=4 {{n/a}};
Objective-C;
C++ (STL);
D;
C#;yield return value;;
Java;break «label»;;continue «label»;;rowspan=2 {{n/a}};;
JavaScript;yield value«;»;
PHP;break «levels»;;continue «levels»;;goto label;;yield «key =>» value;;
Perl;last «label»;;next «label»;;;
Perl 6;;
Go;break «label»;continue «label»;goto label;;
Swift;break «label»;continue «label»;{{n/a}};;
Bash shell;break «levels»;continue «levels»;{{n/a}};{{n/a}};{{n/a}};
Common Lisp;(return) or (return-from block) or (loop-finish);;(tagbody tag<dl><dd><dl><dd>...</dd><dd>tag</dd></dl>...);(go tag);;
Scheme;;;;;;
ISLISP;(return-from block);;(tagbody tag<dl><dd><dl><dd>...</dd><dd>tag</dd></dl>...);(go tag);;
Pascal(ISO);colspan=2 {{n/a}};label:{{ref|Pascal's declarations|[a]}};goto label;;rowspan=5 {{n/a}};
Pascal(FPC);break;;continue;;
Visual Basic;Exit block;{{n/a}};label:;GoTo label;
Visual Basic .NET;Continue block;
Xojo;
Python;break;continue;colspan=2 {{n/a}};yield value;
RPG IV;LEAVE;;ITER;;;;;
S-Lang;break;;continue;;;;;
Fortran;EXIT;CYCLE;label{{ref|Fortran label|[b]}};GOTO label;{{n/a}};
Ruby;break;next;;;;
Windows PowerShell;break «label»;continue;;;;
OCaml;rowspan=4 colspan=4 {{n/a}};;
F#;;
Standard ML;;
Haskell (GHC);;
COBOL;EXIT PERFORM or EXIT PARAGRAPH or EXIT SECTION or EXIT.;EXIT PERFORM CYCLE;label «SECTION».;GO TO label;{{n/a}};
Ya;break «from where»; f.e. break for switch;;continue «to where»; f.e. continue for switch;;:label;goto :label;;{{n/a}};
